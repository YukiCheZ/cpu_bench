# metadata.yaml for ResNet50 CPU benchmark
name: resnet50_cpu
type: macrobenchmark
language: Python
domain:
  - deep_learning
  - computer_vision
  - neural_networks

workloads:
  - name: resnet50_inference
    description: >
      Execute ResNet50 CPU inference using pre-generated input data.
      Measures the forward pass computation performance on CPU.
    data:
      command: python3 generate_data.py
      parameters:
        batch_size:
          description: Number of images per batch
          default: 4
        img_size:
          description: Size of each image
          default: 512
        num_batches:
          description: Number of batches to generate
          default: 10
        output_dir:
          description: Directory to save generated data
          default: "./data"
    command: python3 resnet_eval.py
    parameters:
      data_dir:
        description: Directory containing pre-generated input data batches
        default: "./data"
      threads:
        description: Number of CPU threads to use for inference
        default: 1
      iters:
        description: Number of benchmark iterations
        default: 50
      compile:
        description: Whether to use TorchDynamo compilation for inference
        default: false

  - name: resnet50_training
    description: >
      Execute ResNet50 CPU training using pre-generated input data.
      Measures the forward + backward pass and optimization performance on CPU.
    data:
      command: python3 generate_data.py
      parameters:
        batch_size:
          description: Number of images per batch
          default: 4
        img_size:
          description: Size of each image
          default: 512
        num_batches:
          description: Number of batches to generate
          default: 10
        output_dir:
          description: Directory to save generated data
          default: "./data"
    command: python3 resnet_train.py
    parameters:
      data_dir:
        description: Directory containing pre-generated training data batches
        default: "./data"
      threads:
        description: Number of CPU threads to use for training
        default: 1
      lr:
        description: Learning rate for SGD optimizer
        default: 0.001
      iters:
        description: Number of benchmark iterations 
        default: 20
      compile:
        description: Whether to use TorchDynamo compilation for training
        default: false

characteristics:
  IO_effects: low
  single_machine: true
  network_effects: none
  cpu_bound: true
  memory_intensive: medium

tags:
  - deep_learning
  - computer_vision
  - neural_networks

dependencies:
  python: ">=3.8"
  torch: ">=2.0"
  torchvision: ">=0.15"
