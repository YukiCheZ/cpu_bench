# metadata.yaml for Garbage Collector Benchmark
name: go_garbage_benchmark
type: macrobenchmark
language: Go
domain:
  - runtime
  - garbage_collection
  - cpu_performance

workloads:
  - name: garbage
    description: >
      Benchmark that stresses the Go garbage collector by repeatedly parsing Go source files
      in memory. Measures GC efficiency under concurrent parsing workloads.
    data: 
      command: python3 scripts/generate_data.py 
      parameters:
        size: 100000
        output: ./data/input.go
    command: go run src/garbage.go
    parameters:
      input:
        description: Path to the Go source file to parse
        default: ./data/input.go
      iterations:
        description: Number of parse iterations to run
        default: 200
      threads:
        description: Number of threads (sets GOMAXPROCS)
        default: 0

characteristics:
  IO_effects: low
  single_machine: true
  network_effects: none
  cpu_bound: true
  memory_bound: moderate

tags:
  - cpu
  - garbage_collector
  - runtime
  - concurrency
  - go

dependencies:
  go: "1.24.5"
