# metadata.yaml for Go Compiler Benchmark
name: go_compiler_benchmark
type: macrobenchmark
language: Go
domain:
  - compilation
  - performance
  - build_system

workloads:
  - name: go-benchmark
    description: Benchmark for measuring Go compiler and toolchain build performance.
    data:
      command: python3 generate_data.py
      parameters:
        pkgs:
          description: Number of packages to generate
          default: 100
        files:
          description: Number of files per package
          default: 5
        structs:
          description: Number of structs per file
          default: 20
        funcs:
          description: Number of functions per file
          default: 50
        complex:
          description: Complexity level of generated functions (1-5)
          default: 200
        module:
          description: Module name used in go.mod
          default: data
    command: python3 run_benchmark.py
    parameters:
      scale: 
        description: compiler scale <small, std, all>, <small, std> for cmd/compile and standard library, <all> for full compilation
        default: std
      iterations:
        description: Number of times to repeat the benchmark
        default: 1
      threads:
        description: Number of parallel build threads (GOMAXPROCS)
        default: 1
      no_clean:
        description: Skip cleaning build cache before each run
        type: boolean
        default: false

characteristics:
  IO_effects: moderate
  single_machine: true
  network_effects: none
  cpu_bound: true

tags:
  - cpu
  - compiler
  - build
  - parallel
  - go

dependencies:
  python: ">=3.7"
  go: ">=1.24.5"
